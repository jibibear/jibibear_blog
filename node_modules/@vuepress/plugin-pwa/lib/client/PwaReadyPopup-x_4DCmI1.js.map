{"version":3,"file":"PwaReadyPopup-x_4DCmI1.js","sources":["../../src/client/utils/skipWaiting.ts","../../src/client/components/PwaReadyPopup.ts"],"sourcesContent":["/**\n * Call `skipWaiting()` inside current waiting worker\n *\n * 在当前等待中的 Service Worker 中调用 `skipWaiting()`\n */\nexport const skipWaiting = (registration: ServiceWorkerRegistration): void => {\n  // Get the waiting worker\n  const worker = registration.waiting\n\n  // If there is no waiting worker, return directly\n  if (!worker) return\n\n  // Post SKIP_WAITING message to the waiting worker\n  const channel = new MessageChannel()\n\n  worker.postMessage({ type: 'SKIP_WAITING' }, [channel.port2])\n}\n","import { useLocaleConfig } from '@vuepress/helper/client'\nimport type { PropType, SlotsType, VNode } from 'vue'\nimport {\n  Transition,\n  computed,\n  defineComponent,\n  h,\n  onMounted,\n  shallowRef,\n} from 'vue'\nimport { usePwaEvent } from '../composables/index.js'\nimport type { PwaPluginLocaleConfig } from '../types.js'\nimport { skipWaiting } from '../utils/index.js'\nimport { UpdateIcon } from './icons.js'\n\nimport '../styles/popup.css'\n\nexport const PwaReadyPopup = defineComponent({\n  name: 'PwaReadyPopup',\n\n  props: {\n    /** locale data */\n    locales: {\n      type: Object as PropType<PwaPluginLocaleConfig>,\n      required: true,\n    },\n  },\n\n  slots: Object as SlotsType<{\n    default?: (props: {\n      isReady: boolean\n      reload: () => void\n    }) => VNode | VNode[] | null\n  }>,\n\n  setup(props, { slots }) {\n    const locale = useLocaleConfig(props.locales)\n    const registration = shallowRef<ServiceWorkerRegistration>()\n\n    const isReady = computed(() => Boolean(registration.value))\n\n    const reload = (): void => {\n      if (registration.value) {\n        skipWaiting(registration.value)\n        registration.value = undefined\n      }\n    }\n\n    onMounted(() => {\n      const event = usePwaEvent()\n\n      event.on('updated', (reg) => {\n        registration.value = reg\n      })\n    })\n\n    return (): VNode =>\n      h(\n        Transition,\n        { name: 'popup' },\n        () =>\n          slots.default?.({\n            isReady: isReady.value,\n            reload,\n          }) ??\n          (isReady.value\n            ? h(\n                'button',\n                {\n                  type: 'button',\n                  class: 'sw-update-popup',\n                  tabindex: 0,\n                  onClick: () => {\n                    reload()\n                  },\n                },\n                [\n                  locale.value.update,\n                  h('span', { class: 'icon-wrapper' }, h(UpdateIcon)),\n                ],\n              )\n            : null),\n      )\n  },\n})\n"],"names":["skipWaiting","registration","worker","channel","PwaReadyPopup","defineComponent","props","slots","locale","useLocaleConfig","shallowRef","isReady","computed","reload","onMounted","usePwaEvent","reg","h","Transition","UpdateIcon"],"mappings":"qRAKa,MAAAA,EAAeC,GAAkD,CAE5E,MAAMC,EAASD,EAAa,QAG5B,GAAI,CAACC,EAAQ,OAGb,MAAMC,EAAU,IAAI,eAEpBD,EAAO,YAAY,CAAE,KAAM,cAAe,EAAG,CAACC,EAAQ,KAAK,CAAC,CAC9D,ECCaC,EAAgBC,EAAgB,CAC3C,KAAM,gBAEN,MAAO,CAEL,QAAS,CACP,KAAM,OACN,SAAU,EACZ,CACF,EAEA,MAAO,OAOP,MAAMC,EAAO,CAAE,MAAAC,CAAM,EAAG,CACtB,MAAMC,EAASC,EAAgBH,EAAM,OAAO,EACtCL,EAAeS,EAAsC,EAErDC,EAAUC,EAAS,IAAM,CAAQX,CAAAA,EAAa,KAAM,EAEpDY,EAAS,IAAY,CACrBZ,EAAa,QACfD,EAAYC,EAAa,KAAK,EAC9BA,EAAa,MAAQ,OAEzB,EAEA,OAAAa,EAAU,IAAM,CACAC,EAAAA,EAER,GAAG,UAAYC,GAAQ,CAC3Bf,EAAa,MAAQe,CACvB,CAAC,CACH,CAAC,EAEM,IACLC,EACEC,EACA,CAAE,KAAM,OAAQ,EAChB,IACEX,EAAM,UAAU,CACd,QAASI,EAAQ,MACjB,OAAAE,CACF,CAAC,IACAF,EAAQ,MACLM,EACE,SACA,CACE,KAAM,SACN,MAAO,kBACP,SAAU,EACV,QAAS,IAAM,CACbJ,EACF,CAAA,CACF,EACA,CACEL,EAAO,MAAM,OACbS,EAAE,OAAQ,CAAE,MAAO,cAAe,EAAGA,EAAEE,CAAU,CAAC,CACpD,CACF,EACA,KACR,CACJ,CACF,CAAC"}