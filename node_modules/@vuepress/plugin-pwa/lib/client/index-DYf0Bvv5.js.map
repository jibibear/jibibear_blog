{"version":3,"file":"index-DYf0Bvv5.js","sources":["../../src/client/utils/forceUpdate.ts","../../src/client/utils/registerSW.ts","../../src/client/composables/useRegisterSW.ts","../../src/client/composables/setupPwa.ts","../../src/client/composables/setupViewPoint.ts"],"sourcesContent":["/**\n * Force update page content\n *\n * 强制更新页面内容\n */\nexport const forceUpdate = (): void => {\n  void navigator.serviceWorker.getRegistration().then((registration) => {\n    // Check whether a valid service worker is active\n    if (registration?.active)\n      registration.addEventListener('updatefound', () => {\n        // force refresh\n        // @ts-expect-error: A non-standard API\n        window.location.reload(true)\n      })\n  })\n}\n","/* eslint-disable no-console */\nimport type { Hooks } from 'register-service-worker'\n\n/**\n * Register serviceWorker under `serviceWorkerPath`\n *\n * @param serviceWorkerPath Service Worker path\n * @param hooks Service worker hooks\n * @param showStatus Whether to show status in console\n *\n * 在 `serviceWorkerPath` 下注册 Service Worker\n *\n * @param serviceWorkerPath Service Worker 路径\n * @param hooks Service Worker 钩子\n * @param showStatus 是否在控制台显示状态\n */\nexport const registerSW = async (\n  serviceWorkerPath: string,\n  hooks: Hooks = {},\n  showStatus = true,\n): Promise<void> => {\n  const { register } = await import(\n    /* webpackChunkName: \"register-service-worker\" */ 'register-service-worker'\n  )\n\n  // Register service worker\n  register(serviceWorkerPath, {\n    ready(registration) {\n      if (showStatus) console.info('[Service Worker]: active')\n      hooks.ready?.(registration)\n    },\n\n    registered(registration) {\n      if (showStatus) console.log('[Service Worker]: registered')\n      hooks.registered?.(registration)\n    },\n\n    cached(registration) {\n      if (showStatus) console.log('[Service Worker]: cached')\n      hooks.cached?.(registration)\n    },\n\n    async updatefound(registration) {\n      if (await navigator.serviceWorker.getRegistration()) {\n        if (showStatus) console.log('[Service Worker]: update found')\n        hooks.updatefound?.(registration)\n      }\n    },\n\n    updated(registration) {\n      if (showStatus) console.log('[Service Worker]: updated')\n      hooks.updated?.(registration)\n    },\n\n    offline() {\n      if (showStatus) console.log('[Service Worker]: offline')\n      hooks.offline?.()\n    },\n\n    error(err) {\n      if (showStatus) console.error('[Service Worker]: ', err)\n      hooks.error?.(err)\n    },\n  })\n}\n","import { withBase } from 'vuepress/client'\nimport { registerSW } from '../utils/index.js'\nimport type { PwaEvent } from './usePwaEvent.js'\n\nexport const useRegisterSW = async (\n  serviceWorkerPath: string,\n  event: PwaEvent,\n): Promise<void> =>\n  registerSW(withBase(serviceWorkerPath), {\n    ready(registration) {\n      event.emit('ready', registration)\n    },\n\n    registered(registration) {\n      event.emit('registered', registration)\n    },\n\n    cached(registration) {\n      event.emit('cached', registration)\n    },\n\n    updatefound(registration) {\n      event.emit('updatefound', registration)\n    },\n\n    updated(registration) {\n      const key = 'service-worker-version'\n      const version = Number(localStorage.getItem(key) || 0)\n\n      localStorage.setItem(key, (version + 1).toString())\n      localStorage.removeItem('manifest')\n\n      event.emit('updated', registration)\n    },\n\n    offline() {\n      event.emit('offline')\n    },\n\n    error(err) {\n      event.emit('error', err)\n    },\n  })\n","import mitt from 'mitt'\nimport { onMounted, provide } from 'vue'\nimport { forceUpdate } from '../utils/index.js'\nimport { pwaEventSymbol } from './usePwaEvent.js'\nimport { useRegisterSW } from './useRegisterSW.js'\nimport type { PwaEvent } from './index.js'\n\nexport const setupPwa = (\n  serviceWorkerPath: string,\n  shouldForceUpdate = false,\n): void => {\n  if (__VUEPRESS_SSR__) return\n\n  // Create event emitter and provide it\n  const event: PwaEvent = mitt()\n\n  provide(pwaEventSymbol, event)\n\n  onMounted(async () => {\n    if (__VUEPRESS_DEV__ || !('serviceWorker' in navigator)) return\n\n    let refreshing = false\n\n    // Only listen controllerchange event when a serviceWorker is active\n    if (navigator.serviceWorker.controller)\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        if (refreshing) return\n\n        refreshing = true\n        window.location.reload()\n      })\n\n    if (shouldForceUpdate) forceUpdate()\n\n    await useRegisterSW(serviceWorkerPath, event)\n  })\n}\n","import { onMounted } from 'vue'\n\nexport const setupViewPoint = (): void => {\n  onMounted(() => {\n    const isStandAlone = window.matchMedia('(display-mode: standalone)').matches\n\n    if (isStandAlone) {\n      const head = document.head.querySelector('meta[name=\"viewport\"]')\n\n      if (head) {\n        head.setAttribute(\n          'content',\n          'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover',\n        )\n        return\n      }\n\n      const viewportMeta = document.createElement('meta')\n\n      viewportMeta.name = 'viewport'\n      viewportMeta.content =\n        'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover'\n\n      document.head.appendChild(viewportMeta)\n    }\n  })\n}\n"],"names":["forceUpdate","registration","registerSW","serviceWorkerPath","hooks","showStatus","register","err","useRegisterSW","event","withBase","key","version","setupPwa","shouldForceUpdate","mitt","provide","pwaEventSymbol","onMounted","refreshing","setupViewPoint","head","viewportMeta"],"mappings":"0JAKa,MAAAA,EAAc,IAAY,CAChC,UAAU,cAAc,kBAAkB,KAAMC,GAAiB,CAEhEA,GAAc,QAChBA,EAAa,iBAAiB,cAAe,IAAM,CAGjD,OAAO,SAAS,OAAO,EAAI,CAC7B,CAAC,CACL,CAAC,CACH,ECCaC,EAAa,MACxBC,EACAC,EAAe,GACfC,EAAa,KACK,CAClB,KAAM,CAAE,SAAAC,CAAS,EAAI,KAAM,QACyB,yBACpD,EAGAA,EAASH,EAAmB,CAC1B,MAAMF,EAAc,CACdI,GAAY,QAAQ,KAAK,0BAA0B,EACvDD,EAAM,QAAQH,CAAY,CAC5B,EAEA,WAAWA,EAAc,CACnBI,GAAY,QAAQ,IAAI,8BAA8B,EAC1DD,EAAM,aAAaH,CAAY,CACjC,EAEA,OAAOA,EAAc,CACfI,GAAY,QAAQ,IAAI,0BAA0B,EACtDD,EAAM,SAASH,CAAY,CAC7B,EAEA,MAAM,YAAYA,EAAc,CAC1B,MAAM,UAAU,cAAc,gBAC5BI,IAAAA,GAAY,QAAQ,IAAI,gCAAgC,EAC5DD,EAAM,cAAcH,CAAY,EAEpC,EAEA,QAAQA,EAAc,CAChBI,GAAY,QAAQ,IAAI,2BAA2B,EACvDD,EAAM,UAAUH,CAAY,CAC9B,EAEA,SAAU,CACJI,GAAY,QAAQ,IAAI,2BAA2B,EACvDD,EAAM,UACR,CAAA,EAEA,MAAMG,EAAK,CACLF,GAAY,QAAQ,MAAM,qBAAsBE,CAAG,EACvDH,EAAM,QAAQG,CAAG,CACnB,CACF,CAAC,CACH,EC5DaC,EAAgB,MAC3BL,EACAM,IAEAP,EAAWQ,EAASP,CAAiB,EAAG,CACtC,MAAMF,EAAc,CAClBQ,EAAM,KAAK,QAASR,CAAY,CAClC,EAEA,WAAWA,EAAc,CACvBQ,EAAM,KAAK,aAAcR,CAAY,CACvC,EAEA,OAAOA,EAAc,CACnBQ,EAAM,KAAK,SAAUR,CAAY,CACnC,EAEA,YAAYA,EAAc,CACxBQ,EAAM,KAAK,cAAeR,CAAY,CACxC,EAEA,QAAQA,EAAc,CACpB,MAAMU,EAAM,yBACNC,EAAU,OAAO,aAAa,QAAQD,CAAG,GAAK,CAAC,EAErD,aAAa,QAAQA,GAAMC,EAAU,GAAG,SAAU,CAAA,EAClD,aAAa,WAAW,UAAU,EAElCH,EAAM,KAAK,UAAWR,CAAY,CACpC,EAEA,SAAU,CACRQ,EAAM,KAAK,SAAS,CACtB,EAEA,MAAMF,EAAK,CACTE,EAAM,KAAK,QAASF,CAAG,CACzB,CACF,CAAC,ECnCUM,EAAW,CACtBV,EACAW,EAAoB,KACX,CACT,GAAI,iBAAkB,OAGtB,MAAML,EAAkBM,IAExBC,EAAQC,EAAgBR,CAAK,EAE7BS,EAAU,SAAY,CACpB,GAAI,kBAAoB,EAAE,kBAAmB,WAAY,OAEzD,IAAIC,EAAa,GAGb,UAAU,cAAc,YAC1B,UAAU,cAAc,iBAAiB,mBAAoB,IAAM,CAC7DA,IAEJA,EAAa,GACb,OAAO,SAAS,SAClB,CAAC,EAECL,GAAmBd,IAEvB,MAAMQ,EAAcL,EAAmBM,CAAK,CAC9C,CAAC,CACH,EClCaW,EAAiB,IAAY,CACxCF,EAAU,IAAM,CAGd,GAFqB,OAAO,WAAW,4BAA4B,EAAE,QAEnD,CAChB,MAAMG,EAAO,SAAS,KAAK,cAAc,uBAAuB,EAEhE,GAAIA,EAAM,CACRA,EAAK,aACH,UACA,gGACF,EACA,MACF,CAEA,MAAMC,EAAe,SAAS,cAAc,MAAM,EAElDA,EAAa,KAAO,WACpBA,EAAa,QACX,iGAEF,SAAS,KAAK,YAAYA,CAAY,CACxC,CACF,CAAC,CACH"}