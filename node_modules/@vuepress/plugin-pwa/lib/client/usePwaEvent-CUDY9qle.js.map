{"version":3,"file":"usePwaEvent-CUDY9qle.js","sources":["../../src/client/composables/usePwaEvent.ts"],"sourcesContent":["import type { Emitter } from 'mitt'\nimport type { InjectionKey } from 'vue'\nimport { inject } from 'vue'\n\ndeclare const __VUEPRESS_DEV__: boolean\n\nexport type PwaEvent = Emitter<{\n  ready: ServiceWorkerRegistration\n  registered: ServiceWorkerRegistration\n  cached: ServiceWorkerRegistration\n  updatefound: ServiceWorkerRegistration\n  updated: ServiceWorkerRegistration\n  offline: void\n  error: Error\n}>\n\nexport const pwaEventSymbol: InjectionKey<PwaEvent> = Symbol(\n  __VUEPRESS_DEV__ ? 'PwaEvent' : '',\n)\n\nexport const usePwaEvent = (): PwaEvent => {\n  const pwaEvent = inject(pwaEventSymbol)\n\n  if (!pwaEvent) throw new Error('usePwaEvent() is called without provider.')\n\n  return pwaEvent\n}\n"],"names":["pwaEventSymbol","usePwaEvent","pwaEvent","inject"],"mappings":"6BAgBa,MAAAA,EAAyC,OACpD,iBAAmB,WAAa,EAClC,EAEaC,EAAc,IAAgB,CACzC,MAAMC,EAAWC,EAAOH,CAAc,EAEtC,GAAI,CAACE,EAAU,MAAM,IAAI,MAAM,2CAA2C,EAE1E,OAAOA,CACT"}